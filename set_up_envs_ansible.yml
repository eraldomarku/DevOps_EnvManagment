trigger: 
- none

variables:
  - group: Ansible_Setup_environments_variables
  
#################################################################################################################################################

stages:
# This stage sets inbound rules ofr network security group associated with vma and vmb to allow connection on WinRM port  
- stage: Set_network_security_group_rule
  jobs:
  - job: set_nsg_rule_VmA_VmB
    timeoutInMinutes: $[variables['jobs_timeout']]
    pool:
     vmImage: 'windows-latest'
    steps:
    - task: AzurePowerShell@5
      displayName: Setting azure nsg for VmA
      inputs:
        azureSubscription: $(vma_azure_subscription)
        ScriptType: 'FilePath'
        ScriptPath: $(set_azure_in_nsg_rule_script)
        ScriptArguments: -resourceGroupName $(vma_resourcegroupname) -networkSecurityGroupName $(vma_nsg_name) -ruleName $(rule_name) -destinationPort $(destination_port)
        azurePowerShellVersion: LatestVersion
    - task: AzurePowerShell@5
      displayName: Setting azure nsg for VmB
      inputs:
        azureSubscription: $(vmb_azure_subscription)
        ScriptType: 'FilePath'
        ScriptPath: $(set_azure_in_nsg_rule_script)
        ScriptArguments: -resourceGroupName $(vmb_resourcegroupname) -networkSecurityGroupName $(vmb_nsg_name) -ruleName $(rule_name) -destinationPort $(destination_port)
        azurePowerShellVersion: LatestVersion
# This stage checks if NuGet, df365.tools are installed and the needed packages as d365sqlpackage and d365AzCopy. Also sets winRM for ansible to reach hosts
- stage: Set_environments
  jobs:
  - job: set_VmA
    timeoutInMinutes: $[variables['jobs_timeout']]
    pool:
      vmImage: 'windows-latest'
    steps:
    - task: AzurePowerShell@5
      displayName: Setting VmA
      inputs:
         azureSubscription: $(vma_azure_subscription)
         ScriptType: 'FilePath'
         ScriptPath: $(set_environments_script)
         ScriptArguments: -vmName $(vma_azure_name) -resourceGroupName $(vma_resourceGroupName) -ruleName $(rule_name) -localPort $(destination_port)
         azurePowerShellVersion: LatestVersion
#  - job: set_VmB
#    timeoutInMinutes: $[variables['jobs_timeout']]
#    pool:
#      vmImage: 'windows-latest'
#    steps:
#    - task: AzurePowerShell@5
#      displayName: Setting VmB
#      inputs:
#        azureSubscription: $(vmb_azure_subscription)
#        ScriptType: 'FilePath'
#        ScriptPath: $(set_environments_script)
#        ScriptArguments: -vmName $(vmb_azure_name) -resourceGroupName $(vmb_resourceGroupName) -ruleName $(rule_name) -localPort $(destination_port)
#        azurePowerShellVersion: LatestVersion

