trigger: none
###################################################################################################################################################

variables:
  - group: Ansible_Refresh_DB_Variables
  - group: Ansible_Setup_environments_variables



###################################################################################################################################################

stages:   
- stage: VmA_export_db_and_upload
  jobs:
  - job: execute_playbook_ops_into_VmA
    timeoutInMinutes: $[variables['jobs_timeout']]
    pool:
      name: Nodepool
      demands:
        - agent.name -equals UBUNTU_AGENT
    steps:
    - checkout: self
    - task: CmdLine@2
      inputs:
        script: |
          #Install WinRM module for python in controller ubuntu
          python3 -m pip install --user ansible
          pip install pywinrm
          ls
    - task: Ansible@0
      inputs:
        ansibleInterface: 'agentMachine'
        playbookPathOnAgentMachine: '$(System.DefaultWorkingDirectory)/ansible_db_env_management_scripts/VmA_ops_prova.yml'
        inventoriesAgentMachine: 'inlineContent'
        inventoryInlineContentAgentMachine: |
          [VmA_windows]
          VmA ansible_host=$(vma_ansible_host) 
          [VmA_windows:vars]
          ansible_user=$(vma_ansible_user)
          ansible_password=$(vma_ansible_password) 
          ansible_port=$(vma_ansible_port)
          ansible_connection=winrm 
          ansible_winrm_transport=basic
          ansible_winrm_server_cert_validation=ignore
        failOnStdErr: false
        args: -vvv --extra-vars='
          script_export_db="$(System.DefaultWorkingDirectory)/$(script_export_db)"
          script_upload_db="$(System.DefaultWorkingDirectory)/$(script_upload_db)" 
          extract_db_path="$(extract_db_path)" 
          db_name="$(db_name)" 
          blob_url="$(blob_url)"

- stage: VmB_start
  jobs:
  - job: start_VmB_from_azure
    timeoutInMinutes: $[variables['jobs_timeout']]
    pool:
      vmImage: 'windows-latest'
    steps:
    - task: AzurePowerShell@5
      displayName: Starting VmB
      inputs:
         azureSubscription: $(vmb_azure_subscription)
         ScriptType: 'FilePath'
         ScriptPath: $(script_start_stop_azure_vm)
         ScriptArguments: -command start -resourceGroupName $(vmb_resourcegroupname) -vmName $(vmb_azure_name) 
         azurePowerShellVersion: LatestVersion

- stage: VmB_download_and_import_db
  jobs:
  - job: execute_playbook_ops_into_VmB
    timeoutInMinutes: $[variables['jobs_timeout']]
    pool:
      name: Nodepool
      demands:
        - agent.name -equals UBUNTU_AGENT
    steps:
    - checkout: self
    - task: CmdLine@2
      inputs:
        script: |
          #Install WinRM module for python in controller ubuntu
          python3 -m pip install --user ansible
          pip install pywinrm
          ls
    - task: Ansible@0
      inputs:
        ansibleInterface: 'agentMachine'
        playbookPathOnAgentMachine: '$(System.DefaultWorkingDirectory)/$(playbook_vmb_ops)'
        inventoriesAgentMachine: 'file'
        inventoryFileOnAgentMachine: '$(System.DefaultWorkingDirectory)/$(inventory_ansible)'
        failOnStdErr: false
        args: -vvv --extra-vars='
          script_download_db="$(System.DefaultWorkingDirectory)/$(script_download_db)"
          script_import_db="$(System.DefaultWorkingDirectory)/$(script_import_db)"
          script_start_stop_d365fo="$(System.DefaultWorkingDirectory)/$(script_start_stop_d365fo)" 
          script_rename_mdf_ldf="$(System.DefaultWorkingDirectory)/$(script_rename_mdf_ldf)"  
          download_db_path="$(download_db_path)" 
          db_name="$(db_name)"
          blob_url="$(blob_url)"
          sql_db_name="$(sql_db_name)"
          db_backup_d365fo_name="$(db_backup_d365fo_name)"
          db_d365fo_name="$(db_d365fo_name)"
          VmB_ansible_host = "$(vmb_ansible_host)"
          VmB_ansible_user = "$(vmb_ansible_user)"
          VmB_ansible_password = "$(vmb_ansible_password)"
          VmB_ansible_port = "$(vmb_ansible_port)"
          '