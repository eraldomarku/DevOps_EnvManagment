 
variables:
# Name of agent-pool 
- name: pool
  value: "Nodepool"

# Name of agent installed on VmA
- name: agent_A
  value: "uat_simulation_agent"

# Name of agent installed on VmB
- name: agent_B
  value: "tier1_agent"

# Timeout after which the pipeline will be interrupted
- name: jobs_timeout
  value: 360
# ------------------------------------------------------
# SCRIPT
- name: script_set_environments
  value: 'db_env_managment_scripts/set_environments.ps1'

- name: agent_path
  value: 'C:\Agent'

- name: startup_scripts_path
  value: 'C:\startup_scripts'

- name: policy_script_path
  value: 'C:\Windows\System32\GroupPolicy\Machine\Scripts\scripts.ini'

- name: powershell_path
  value: 'C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe'

#################################################################################################################################################

stages:
# First stage checks if NuGet, df365.tools are installed and the needed packages as d365sqlpackage and d365AzCopy 
- stage: Set_environments
  jobs:
  - job: set_VmA
    timeoutInMinutes: ${{variables.jobs_timeout}}
    pool:
      name: ${{variables.pool}}
      demands:
        - agent.name -equals ${{variables.agent_A}}
    steps:
    - task: PowerShell@2
      inputs:
        arguments: "${{variables.agent_path}} ${{variables.startup_scripts_path}} ${{variables.policy_script_path}} ${{variables.powershell_path}}"
        filePath: ${{variables.script_set_environments}}
  - job: set_VmB
    timeoutInMinutes: ${{variables.jobs_timeout}}
    pool:
      name: ${{variables.pool}}
      demands:
        - agent.name -equals ${{variables.agent_B}}
    steps:
    - task: PowerShell@2
      inputs:
        arguments: "${{variables.agent_path}} ${{variables.startup_scripts_path}} ${{variables.policy_script_path}} ${{variables.powershell_path}}"
        filePath: ${{variables.script_set_environments}}
